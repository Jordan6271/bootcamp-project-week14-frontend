{"version":3,"sources":["ApiClient/ApiClient.js","Components/Add.js","Components/Dashboard.js","Components/Login.js","App.js","reportWebVitals.js","index.js"],"names":["url","ApiClient","tokenProvider","logoutHandler","this","method","data","axios","headers","authorization","catch","error","response","status","Promise","reject","authenticatedApiFetch","name","location","description","date","time","id","username","password","a","withRouter","props","useState","disabled","setDisabled","Form","className","onSubmit","event","preventDefault","currentEvent","apiClient","updateEvent","_id","target","eventName","value","eventLocation","eventDescription","eventDate","eventTime","addEvent","then","document","getElementById","reset","refreshList","history","push","alert","submitHandler","Group","controlId","Label","Control","type","placeholder","defaultValue","required","Button","variant","onClick","Dashboard","events","setEvents","undefined","setCurrentEvent","getEvent","useEffect","Navbar","bg","Brand","Toggle","aria-controls","Collapse","Nav","to","Container","path","exact","length","Table","striped","bordered","hover","map","current","removeEvent","Login","login","formUsername","formPassword","loggedIn","token","App","window","localStorage","getItem","setToken","logout","removeItem","setItem","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.564c9dd7.chunk.js","sourcesContent":["import axios from \"axios\";\r\nconst url = \"https://bootcamp-week14-eventful.herokuapp.com/\";\r\n\r\nexport class ApiClient {\r\n    constructor(tokenProvider, logoutHandler) {\r\n        this.tokenProvider = tokenProvider;\r\n        this.logoutHandler = logoutHandler;\r\n    }\r\n\r\n    authenticatedApiFetch(method, url, data) {\r\n        return axios({\r\n            method,\r\n            url,\r\n            headers: {\r\n                authorization: this.tokenProvider(),\r\n            },\r\n            data,\r\n        }).catch((error) => {\r\n            if (error.response.status === 403) {\r\n                this.logoutHandler();\r\n                return Promise.reject();\r\n            } else {\r\n                throw error;\r\n            }\r\n        });\r\n    }\r\n\r\n    getEvent() {\r\n        return this.authenticatedApiFetch(`get`, url);\r\n    }\r\n\r\n    addEvent(name, location, description, date, time) {\r\n        return this.authenticatedApiFetch(`post`, url, {\r\n            name,\r\n            location,\r\n            description,\r\n            date,\r\n            time,\r\n        });\r\n    }\r\n\r\n    removeEvent(id) {\r\n        return this.authenticatedApiFetch(`delete`, `${url}${id}`);\r\n    }\r\n\r\n    updateEvent(id, name, location, description, date, time) {\r\n        return this.authenticatedApiFetch(`put`, `${url}${id}`, {\r\n            name,\r\n            location,\r\n            description,\r\n            date,\r\n            time,\r\n        });\r\n    }\r\n\r\n    async login(username, password) {\r\n        return await axios({\r\n            method: `post`,\r\n            url: `${url}auth`,\r\n            data: {\r\n                username,\r\n                password,\r\n            },\r\n        });\r\n    }\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst Add = (props) => {\r\n    const [disabled, setDisabled] = useState(false);\r\n\r\n    const cancelUpdate = () => {\r\n        document.getElementById(`add-event-form`).reset();\r\n        props.refreshList();\r\n        props.history.push(`/`);\r\n    };\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault();\r\n        setDisabled(true);\r\n        let result;\r\n        if (props.currentEvent) {\r\n            result = props.apiClient.updateEvent(\r\n                props.currentEvent._id,\r\n                event.target.eventName.value,\r\n                event.target.eventLocation.value,\r\n                event.target.eventDescription.value,\r\n                event.target.eventDate.value,\r\n                event.target.eventTime.value\r\n            );\r\n        } else {\r\n            result = props.apiClient.addEvent(\r\n                event.target.eventName.value,\r\n                event.target.eventLocation.value,\r\n                event.target.eventDescription.value,\r\n                event.target.eventDate.value,\r\n                event.target.eventTime.value\r\n            );\r\n        }\r\n        result\r\n            .then(() => {\r\n                setDisabled(false);\r\n                document.getElementById(`add-event-form`).reset();\r\n                props.refreshList();\r\n                props.history.push(`/`);\r\n            })\r\n            .catch(() => {\r\n                alert(`An error occurred, please try again.`);\r\n                setDisabled(false);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Form\r\n                className=\"w-25 mx-auto text-center pt-4\"\r\n                id=\"add-event-form\"\r\n                onSubmit={(event) => submitHandler(event)}\r\n            >\r\n                <h1>{props.currentEvent ? \"Update event\" : \"Add new event\"}</h1>\r\n                <Form.Group controlId=\"eventName\">\r\n                    <Form.Label>Name:</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Enter event name\"\r\n                        className=\"mb-3\"\r\n                        defaultValue={props.currentEvent?.name}\r\n                        name=\"eventName\"\r\n                        disabled={disabled}\r\n                        required\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"eventLocation\">\r\n                    <Form.Label>Location:</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Enter event location\"\r\n                        className=\"mb-3\"\r\n                        defaultValue={props.currentEvent?.location}\r\n                        name=\"eventLocation\"\r\n                        disabled={disabled}\r\n                        required\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"eventDescription\">\r\n                    <Form.Label>Description:</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Enter event description\"\r\n                        className=\"mb-3\"\r\n                        defaultValue={props.currentEvent?.description}\r\n                        name=\"eventDescription\"\r\n                        disabled={disabled}\r\n                        required\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"eventDate\">\r\n                    <Form.Label>Date:</Form.Label>\r\n                    <Form.Control\r\n                        type=\"date\"\r\n                        placeholder=\"Enter event date\"\r\n                        className=\"mb-3\"\r\n                        defaultValue={props.currentEvent?.date}\r\n                        name=\"eventDate\"\r\n                        disabled={disabled}\r\n                        required\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"eventTime\">\r\n                    <Form.Label>Time:</Form.Label>\r\n                    <Form.Control\r\n                        type=\"time\"\r\n                        placeholder=\"Enter event time\"\r\n                        className=\"mb-3\"\r\n                        defaultValue={props.currentEvent?.time}\r\n                        name=\"eventTime\"\r\n                        disabled={disabled}\r\n                        required\r\n                    />\r\n                </Form.Group>\r\n                <Button\r\n                    variant=\"success\"\r\n                    type=\"submit\"\r\n                    className=\"mx-2\"\r\n                    disabled={disabled}\r\n                >\r\n                    Submit\r\n                </Button>\r\n                <Button\r\n                    variant=\"danger\"\r\n                    className=\"mx-2\"\r\n                    onClick={() => cancelUpdate()}\r\n                    disabled={disabled}\r\n                >\r\n                    Cancel\r\n                </Button>\r\n            </Form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withRouter(Add);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Add from \"./Add\";\r\n\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Table from \"react-bootstrap/Table\";\r\n\r\nimport { HashRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\n\r\nconst Dashboard = (props) => {\r\n    const [events, setEvents] = useState([]);\r\n    const [currentEvent, setCurrentEvent] = useState(undefined);\r\n\r\n    const refreshList = () => {\r\n        props.apiClient.getEvent().then((response) => setEvents(response.data));\r\n    };\r\n\r\n    const removeEvent = (id) => {\r\n        props.apiClient.removeEvent(id).then(() => refreshList());\r\n    };\r\n\r\n    const updateEvent = (event) => {\r\n        setCurrentEvent(event);\r\n    };\r\n\r\n    useEffect(() => {\r\n        refreshList();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    const buildRows = () => {\r\n        return events.map((current) => {\r\n            return (\r\n                <tr key={current._id}>\r\n                    <td className=\"table-width-15\">{current.name}</td>\r\n                    <td className=\"table-width-15\">{current.location}</td>\r\n                    <td className=\"table-width-35\">{current.description}</td>\r\n                    <td className=\"table-width-10\">{current.date}</td>\r\n                    <td className=\"table-width-10\">{current.time}</td>\r\n                    <td className=\"table-width-15\">\r\n                        <Link to=\"/add\" className=\"text-decoration-none\">\r\n                            <span\r\n                                className=\"action-link update mx-2\"\r\n                                onClick={() => updateEvent(current)}\r\n                            >\r\n                                Update\r\n                            </span>\r\n                        </Link>\r\n                        <span\r\n                            className=\"action-link remove mx-2\"\r\n                            onClick={() => removeEvent(current._id)}\r\n                        >\r\n                            Remove\r\n                        </span>\r\n                    </td>\r\n                </tr>\r\n            );\r\n        });\r\n    };\r\n\r\n    return (\r\n        <Router>\r\n            <Navbar bg=\"dark\" variant=\"dark\">\r\n                <Navbar.Brand className=\"mx-5\">Eventful</Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Nav>\r\n                        <Link to=\"/\" className=\"nav-link text-danger px-3\">\r\n                            View Events\r\n                        </Link>\r\n                        <Link to=\"/add\" className=\"nav-link text-danger px-3\">\r\n                            Add New Event\r\n                        </Link>\r\n                    </Nav>\r\n                    <Nav className=\"m-auto\" />\r\n                    <Nav>\r\n                        <Link\r\n                            to=\"/\"\r\n                            className=\"ml-auto nav-link text-danger px-5\"\r\n                            onClick={() => props.apiClient.logoutHandler()}\r\n                        >\r\n                            Logout\r\n                        </Link>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n            <Container>\r\n                <Switch>\r\n                    <Route path=\"/add\">\r\n                        <Add\r\n                            apiClient={props.apiClient}\r\n                            refreshList={() => {\r\n                                refreshList();\r\n                                setCurrentEvent(undefined);\r\n                            }}\r\n                            currentEvent={currentEvent}\r\n                        />\r\n                    </Route>\r\n                    <Route exact path=\"/\">\r\n                        <div className=\"mx-auto text-center pt-4\">\r\n                            <h1>My Events</h1>\r\n                            {events.length ? (\r\n                                <Table striped bordered hover id=\"events-table\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>Event Name</th>\r\n                                            <th>Location</th>\r\n                                            <th>Description</th>\r\n                                            <th>Date</th>\r\n                                            <th>Time</th>\r\n                                            <th>Actions</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>{buildRows()}</tbody>\r\n                                </Table>\r\n                            ) : (\r\n                                <div className=\"mt-4\">\r\n                                    Sorry, you have no events yet.{\" \"}\r\n                                    <Link to=\"/add\">Try adding one!</Link>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    </Route>\r\n                    <Route path=\"/\">Error: 404 not found</Route>\r\n                </Switch>\r\n            </Container>\r\n        </Router>\r\n    );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React, { useState } from \"react\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nconst Login = (props) => {\r\n    // eslint-disable-next-line no-unused-vars\r\n    const [disabled, setDisabled] = useState(false);\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault();\r\n        setDisabled(true);\r\n        props.apiClient\r\n            .login(\r\n                event.target.formUsername.value,\r\n                event.target.formPassword.value\r\n            )\r\n            .then((response) => {\r\n                setDisabled(false);\r\n                props.loggedIn(response.data.token);\r\n            })\r\n            .catch((error) => {\r\n                if (error.response.status === 401) {\r\n                    alert(`You have entered an invalid username or password.`);\r\n                } else {\r\n                    alert(error);\r\n                }\r\n                setDisabled(false);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Navbar bg=\"dark\" variant=\"dark\">\r\n                <Navbar.Brand className=\"mx-5\">Eventful</Navbar.Brand>\r\n            </Navbar>\r\n            <div className=\"w-25 m-auto text-center pt-4\">\r\n                <Form onSubmit={(event) => submitHandler(event)}>\r\n                    <h1>Log In</h1>\r\n                    <Form.Group controlId=\"formUsername\" className=\"pt-4\">\r\n                        <Form.Label>Username:</Form.Label>\r\n                        <Form.Control\r\n                            type=\"username\"\r\n                            placeholder=\"Enter username\"\r\n                            required\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formPassword\" className=\"py-4\">\r\n                        <Form.Label>Password:</Form.Label>\r\n                        <Form.Control\r\n                            type=\"password\"\r\n                            placeholder=\"Enter password\"\r\n                            required\r\n                        />\r\n                    </Form.Group>\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Submit\r\n                    </Button>\r\n                </Form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport { ApiClient } from \"./ApiClient/ApiClient\";\nimport Dashboard from \"./Components/Dashboard\";\nimport Login from \"./Components/Login\";\n\nconst App = () => {\n    const [token, setToken] = useState(window.localStorage.getItem(`token`));\n    const apiClient = new ApiClient(\n        () => token,\n        () => logout()\n    );\n\n    const login = (token) => {\n        window.localStorage.setItem(`token`, token);\n        setToken(token);\n    };\n    const logout = () => {\n        window.localStorage.removeItem(`token`);\n        setToken(undefined);\n    };\n    if (token) {\n        return <Dashboard apiClient={apiClient} />;\n    }\n    return <Login loggedIn={(token) => login(token)} apiClient={apiClient} />;\n};\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import(\"web-vitals\").then(\n            ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n                getCLS(onPerfEntry);\n                getFID(onPerfEntry);\n                getFCP(onPerfEntry);\n                getLCP(onPerfEntry);\n                getTTFB(onPerfEntry);\n            }\n        );\n    }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}