{"version":3,"sources":["Eventful/ApiClient/ApiClient.js","Eventful/Add/Add.js","Eventful/Dashboard/Dashboard.js","Eventful/Login/Login.js","Eventful/Eventful.js","App.js","reportWebVitals.js","index.js"],"names":["url","ApiClient","tokenProvider","logoutHandler","this","method","data","axios","headers","authorization","catch","error","response","status","Promise","reject","authenticatedApiFetch","name","location","description","date","time","id","username","password","a","Add","props","state","disabled","document","getElementById","reset","refreshList","history","push","event","preventDefault","setState","currentEvent","apiClient","updateEvent","_id","target","eventName","value","eventLocation","eventDescription","eventDate","eventTime","addEvent","then","console","log","alert","Form","className","onSubmit","submitHandler","Group","controlId","Label","Control","type","placeholder","defaultValue","required","Button","variant","onClick","cancelUpdate","React","Component","withRouter","Dashboard","events","undefined","getEvent","removeEvent","map","current","to","Navbar","bg","Brand","Toggle","aria-controls","Collapse","Nav","Container","path","exact","length","Table","striped","bordered","hover","buildRows","Login","login","formUsername","formPassword","loggedIn","token","Eventful","window","localStorage","getItem","logout","setItem","removeItem","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.f72ae7d7.chunk.js","sourcesContent":["import axios from \"axios\";\r\nconst url = \"https://bootcamp-week14-eventful.herokuapp.com/\";\r\n\r\nexport class ApiClient {\r\n    constructor(tokenProvider, logoutHandler) {\r\n        this.tokenProvider = tokenProvider;\r\n        this.logoutHandler = logoutHandler;\r\n    }\r\n\r\n    authenticatedApiFetch(method, url, data) {\r\n        return axios({\r\n            method,\r\n            url,\r\n            headers: {\r\n                authorization: this.tokenProvider(),\r\n            },\r\n            data,\r\n        }).catch((error) => {\r\n            if (error.response.status === 403) {\r\n                this.logoutHandler();\r\n                return Promise.reject();\r\n            } else {\r\n                throw error;\r\n            }\r\n        });\r\n    }\r\n\r\n    getEvent() {\r\n        return this.authenticatedApiFetch(`get`, url);\r\n    }\r\n\r\n    addEvent(name, location, description, date, time) {\r\n        return this.authenticatedApiFetch(`post`, url, {\r\n            name,\r\n            location,\r\n            description,\r\n            date,\r\n            time,\r\n        });\r\n    }\r\n\r\n    removeEvent(id) {\r\n        return this.authenticatedApiFetch(`delete`, `${url}${id}`);\r\n    }\r\n\r\n    updateEvent(id, name, location, description, date, time) {\r\n        return this.authenticatedApiFetch(`put`, `${url}${id}`, {\r\n            name,\r\n            location,\r\n            description,\r\n            date,\r\n            time,\r\n        });\r\n    }\r\n\r\n    async login(username, password) {\r\n        return await axios({\r\n            method: `post`,\r\n            url: `${url}auth`,\r\n            data: {\r\n                username,\r\n                password,\r\n            },\r\n        });\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass Add extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            disabled: false,\r\n        };\r\n    }\r\n\r\n    cancelUpdate() {\r\n        document.getElementById(`add-event-form`).reset();\r\n        this.props.refreshList();\r\n        this.props.history.push(`/`);\r\n    }\r\n\r\n    submitHandler(event) {\r\n        event.preventDefault();\r\n        this.setState({ disabled: true });\r\n        let result;\r\n        if (this.props.currentEvent) {\r\n            result = this.props.apiClient.updateEvent(\r\n                this.props.currentEvent._id,\r\n                event.target.eventName.value,\r\n                event.target.eventLocation.value,\r\n                event.target.eventDescription.value,\r\n                event.target.eventDate.value,\r\n                event.target.eventTime.value\r\n            );\r\n        } else {\r\n            result = this.props.apiClient.addEvent(\r\n                event.target.eventName.value,\r\n                event.target.eventLocation.value,\r\n                event.target.eventDescription.value,\r\n                event.target.eventDate.value,\r\n                event.target.eventTime.value\r\n            );\r\n        }\r\n        result\r\n            .then(() => {\r\n                this.setState({ disabled: false });\r\n                document.getElementById(`add-event-form`).reset();\r\n                this.props.refreshList();\r\n                this.props.history.push(`/`);\r\n            })\r\n            .catch(() => {\r\n                console.log(`Catch error!`);\r\n                alert(`An error occurred, please try again.`);\r\n                this.setState({ disabled: false });\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Form\r\n                    className=\"w-25 mx-auto text-center pt-4\"\r\n                    id=\"add-event-form\"\r\n                    onSubmit={(event) => this.submitHandler(event)}\r\n                >\r\n                    <h1>\r\n                        {this.props.currentEvent\r\n                            ? \"Update event\"\r\n                            : \"Add new event\"}\r\n                    </h1>\r\n                    <Form.Group controlId=\"eventName\">\r\n                        <Form.Label>Name:</Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            placeholder=\"Enter event name\"\r\n                            className=\"mb-3\"\r\n                            defaultValue={this.props.currentEvent?.name}\r\n                            name=\"eventName\"\r\n                            disabled={this.state.disabled}\r\n                            required\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"eventLocation\">\r\n                        <Form.Label>Location:</Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            placeholder=\"Enter event location\"\r\n                            className=\"mb-3\"\r\n                            defaultValue={this.props.currentEvent?.location}\r\n                            name=\"eventLocation\"\r\n                            disabled={this.state.disabled}\r\n                            required\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"eventDescription\">\r\n                        <Form.Label>Description:</Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            placeholder=\"Enter event description\"\r\n                            className=\"mb-3\"\r\n                            defaultValue={this.props.currentEvent?.description}\r\n                            name=\"eventDescription\"\r\n                            disabled={this.state.disabled}\r\n                            required\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"eventDate\">\r\n                        <Form.Label>Date:</Form.Label>\r\n                        <Form.Control\r\n                            type=\"date\"\r\n                            placeholder=\"Enter event date\"\r\n                            className=\"mb-3\"\r\n                            defaultValue={this.props.currentEvent?.date}\r\n                            name=\"eventDate\"\r\n                            disabled={this.state.disabled}\r\n                            required\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"eventTime\">\r\n                        <Form.Label>Time:</Form.Label>\r\n                        <Form.Control\r\n                            type=\"time\"\r\n                            placeholder=\"Enter event time\"\r\n                            className=\"mb-3\"\r\n                            defaultValue={this.props.currentEvent?.time}\r\n                            name=\"eventTime\"\r\n                            disabled={this.state.disabled}\r\n                            required\r\n                        />\r\n                    </Form.Group>\r\n                    <Button\r\n                        variant=\"success\"\r\n                        type=\"submit\"\r\n                        className=\"mx-2\"\r\n                        disabled={this.state.disabled}\r\n                    >\r\n                        Submit\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"danger\"\r\n                        className=\"mx-2\"\r\n                        onClick={() => this.cancelUpdate()}\r\n                        disabled={this.state.disabled}\r\n                    >\r\n                        Cancel\r\n                    </Button>\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Add);\r\n","import React from \"react\";\r\nimport \"./Dashboard.css\";\r\nimport Add from \"../Add/Add\";\r\n\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Table from \"react-bootstrap/Table\";\r\n\r\nimport { HashRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\n\r\nclass Dashboard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            events: [],\r\n            currentEvent: undefined,\r\n        };\r\n    }\r\n\r\n    refreshList() {\r\n        this.props.apiClient.getEvent().then((response) =>\r\n            this.setState({\r\n                events: response.data,\r\n            })\r\n        );\r\n    }\r\n\r\n    removeEvent(id) {\r\n        this.props.apiClient.removeEvent(id).then(() => this.refreshList());\r\n    }\r\n\r\n    updateEvent(event) {\r\n        this.setState({\r\n            currentEvent: event,\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshList();\r\n    }\r\n\r\n    buildRows() {\r\n        return this.state.events.map((current) => {\r\n            return (\r\n                <tr key={current._id}>\r\n                    <td className=\"table-width-15\">{current.name}</td>\r\n                    <td className=\"table-width-15\">{current.location}</td>\r\n                    <td className=\"table-width-35\">{current.description}</td>\r\n                    <td className=\"table-width-10\">{current.date}</td>\r\n                    <td className=\"table-width-10\">{current.time}</td>\r\n                    <td className=\"table-width-15\">\r\n                        <Link to=\"/add\" className=\"text-decoration-none\">\r\n                            <span\r\n                                className=\"action-link update mx-2\"\r\n                                onClick={() => this.updateEvent(current)}\r\n                            >\r\n                                Update\r\n                            </span>\r\n                        </Link>\r\n                        <span\r\n                            className=\"action-link remove mx-2\"\r\n                            onClick={() => this.removeEvent(current._id)}\r\n                        >\r\n                            Remove\r\n                        </span>\r\n                    </td>\r\n                </tr>\r\n            );\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Router>\r\n                <Navbar bg=\"dark\" variant=\"dark\">\r\n                    <Navbar.Brand className=\"mx-5\">Eventful</Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav>\r\n                            <Link to=\"/\" className=\"nav-link text-danger px-3\">\r\n                                View Events\r\n                            </Link>\r\n                            <Link\r\n                                to=\"/add\"\r\n                                className=\"nav-link text-danger px-3\"\r\n                            >\r\n                                Add New Event\r\n                            </Link>\r\n                        </Nav>\r\n                        <Nav className=\"m-auto\" />\r\n                        <Nav>\r\n                            <Link\r\n                                to=\"/\"\r\n                                className=\"ml-auto nav-link text-danger px-5\"\r\n                                onClick={() =>\r\n                                    this.props.apiClient.logoutHandler()\r\n                                }\r\n                            >\r\n                                Logout\r\n                            </Link>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n                <Container>\r\n                    <Switch>\r\n                        <Route path=\"/add\">\r\n                            <Add\r\n                                apiClient={this.props.apiClient}\r\n                                refreshList={() => {\r\n                                    this.refreshList();\r\n                                    this.setState({\r\n                                        currentEvent: undefined,\r\n                                    });\r\n                                }}\r\n                                currentEvent={this.state.currentEvent}\r\n                            />\r\n                        </Route>\r\n                        <Route exact path=\"/\">\r\n                            <div className=\"mx-auto text-center pt-4\">\r\n                                <h1>My Events</h1>\r\n                                {this.state.events.length ? (\r\n                                    <Table\r\n                                        striped\r\n                                        bordered\r\n                                        hover\r\n                                        id=\"events-table\"\r\n                                    >\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th>Event Name</th>\r\n                                                <th>Location</th>\r\n                                                <th>Description</th>\r\n                                                <th>Date</th>\r\n                                                <th>Time</th>\r\n                                                <th>Actions</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>{this.buildRows()}</tbody>\r\n                                    </Table>\r\n                                ) : (\r\n                                    <div className=\"mt-4\">\r\n                                        Sorry, you have no events yet.{\" \"}\r\n                                        <Link to=\"/add\">Try adding one!</Link>\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        </Route>\r\n                        <Route path=\"/\">Error: 404 not found</Route>\r\n                    </Switch>\r\n                </Container>\r\n            </Router>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Dashboard;\r\n","import React from \"react\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nclass Login extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            disabled: false,\r\n        };\r\n    }\r\n\r\n    submitHandler(event) {\r\n        event.preventDefault();\r\n        this.setState({ disabled: true });\r\n        this.props.apiClient\r\n            .login(\r\n                event.target.formUsername.value,\r\n                event.target.formPassword.value\r\n            )\r\n            .then((response) => {\r\n                this.setState({ disabled: false });\r\n                this.props.loggedIn(response.data.token);\r\n            })\r\n            .catch((error) => {\r\n                if (error.response.status === 401) {\r\n                    alert(`You have entered an invalid username or password.`);\r\n                } else {\r\n                    alert(error);\r\n                }\r\n                this.setState({ disabled: false });\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar bg=\"dark\" variant=\"dark\">\r\n                    <Navbar.Brand className=\"mx-5\">Eventful</Navbar.Brand>\r\n                </Navbar>\r\n                <div className=\"w-25 m-auto text-center pt-4\">\r\n                    <Form onSubmit={(event) => this.submitHandler(event)}>\r\n                        <h1>Log In</h1>\r\n                        <Form.Group controlId=\"formUsername\" className=\"pt-4\">\r\n                            <Form.Label>Username:</Form.Label>\r\n                            <Form.Control\r\n                                type=\"username\"\r\n                                placeholder=\"Enter username\"\r\n                                required\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formPassword\" className=\"py-4\">\r\n                            <Form.Label>Password:</Form.Label>\r\n                            <Form.Control\r\n                                type=\"password\"\r\n                                placeholder=\"Enter password\"\r\n                                required\r\n                            />\r\n                        </Form.Group>\r\n                        <Button variant=\"primary\" type=\"submit\">\r\n                            Submit\r\n                        </Button>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { ApiClient } from \"./ApiClient/ApiClient\";\r\nimport Dashboard from \"./Dashboard/Dashboard\";\r\nimport Login from \"./Login/Login\";\r\n\r\nclass Eventful extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            token: window.localStorage.getItem(`token`),\r\n        };\r\n        this.apiClient = new ApiClient(\r\n            () => this.state.token,\r\n            () => this.logout()\r\n        );\r\n    }\r\n\r\n    login(token) {\r\n        window.localStorage.setItem(`token`, token);\r\n        this.setState({ token });\r\n    }\r\n\r\n    logout() {\r\n        window.localStorage.removeItem(`token`);\r\n        this.setState({ token: undefined });\r\n    }\r\n\r\n    render() {\r\n        if (this.state.token) {\r\n            return <Dashboard apiClient={this.apiClient} />;\r\n        }\r\n        return (\r\n            <Login\r\n                loggedIn={(token) => this.login(token)}\r\n                apiClient={this.apiClient}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default Eventful;\r\n","import React from \"react\";\nimport Eventful from \"./Eventful/Eventful\";\n\nconst App = () => {\n    return (\n        <div>\n            <Eventful />\n        </div>\n    );\n};\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import(\"web-vitals\").then(\n            ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n                getCLS(onPerfEntry);\n                getFID(onPerfEntry);\n                getFCP(onPerfEntry);\n                getLCP(onPerfEntry);\n                getTTFB(onPerfEntry);\n            }\n        );\n    }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}