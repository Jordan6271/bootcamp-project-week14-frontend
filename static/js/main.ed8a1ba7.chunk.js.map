{"version":3,"sources":["Eventful/ApiClient/ApiClient.js","Eventful/Add/Add.js","Eventful/Dashboard/Dashboard.js","Eventful/Login/Login.js","Eventful/Eventful.js","App.js","reportWebVitals.js","index.js"],"names":["url","ApiClient","tokenProvider","logoutHandler","this","method","data","axios","headers","authorization","catch","error","response","status","Promise","reject","authenticatedApiFetch","name","location","description","date","time","id","username","password","a","Add","props","state","disabled","event","preventDefault","setState","currentEvent","apiClient","updateEvent","_id","target","eventName","value","eventLocation","eventDescription","eventDate","eventTime","addEvent","then","document","getElementById","reset","refreshList","console","log","alert","onSubmit","submitHandler","type","defaultValue","React","Component","Dashboard","events","undefined","getEvent","removeEvent","map","current","onClick","buildRows","Login","login","loggedIn","token","Eventful","window","localStorage","getItem","logout","setItem","removeItem","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.ed8a1ba7.chunk.js","sourcesContent":["import axios from \"axios\";\r\nconst url = \"https://bootcamp-week14-eventful.herokuapp.com/\";\r\n\r\nexport class ApiClient {\r\n    constructor(tokenProvider, logoutHandler) {\r\n        this.tokenProvider = tokenProvider;\r\n        this.logoutHandler = logoutHandler;\r\n    }\r\n\r\n    authenticatedApiFetch(method, url, data) {\r\n        return axios({\r\n            method,\r\n            url,\r\n            headers: {\r\n                authorization: this.tokenProvider(),\r\n            },\r\n            data,\r\n        }).catch((error) => {\r\n            if (error.response.status === 403) {\r\n                this.logoutHandler();\r\n                return Promise.reject();\r\n            } else {\r\n                throw error;\r\n            }\r\n        });\r\n    }\r\n\r\n    getEvent() {\r\n        return this.authenticatedApiFetch(`get`, url);\r\n    }\r\n\r\n    addEvent(name, location, description, date, time) {\r\n        return this.authenticatedApiFetch(`post`, url, {\r\n            name,\r\n            location,\r\n            description,\r\n            date,\r\n            time,\r\n        });\r\n    }\r\n\r\n    removeEvent(id) {\r\n        return this.authenticatedApiFetch(`delete`, `${url}${id}`);\r\n    }\r\n\r\n    updateEvent(id, name, location, description, date, time) {\r\n        return this.authenticatedApiFetch(`put`, `${url}${id}`, {\r\n            name,\r\n            location,\r\n            description,\r\n            date,\r\n            time,\r\n        });\r\n    }\r\n\r\n    async login(username, password) {\r\n        return await axios({\r\n            method: `post`,\r\n            url: `${url}auth`,\r\n            data: {\r\n                username,\r\n                password,\r\n            },\r\n        });\r\n    }\r\n}\r\n","import React from \"react\";\r\n\r\nclass Add extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            disabled: false,\r\n        };\r\n    }\r\n\r\n    submitHandler(event) {\r\n        event.preventDefault();\r\n        this.setState({ disabled: true });\r\n        let result;\r\n        if (this.props.currentEvent) {\r\n            result = this.props.apiClient.updateEvent(\r\n                this.props.currentEvent._id,\r\n                event.target.eventName.value,\r\n                event.target.eventLocation.value,\r\n                event.target.eventDescription.value,\r\n                event.target.eventDate.value,\r\n                event.target.eventTime.value\r\n            );\r\n        } else {\r\n            result = this.props.apiClient.addEvent(\r\n                event.target.eventName.value,\r\n                event.target.eventLocation.value,\r\n                event.target.eventDescription.value,\r\n                event.target.eventDate.value,\r\n                event.target.eventTime.value\r\n            );\r\n        }\r\n        result\r\n            .then(() => {\r\n                this.setState({ disabled: false });\r\n                document.getElementById(`add-event-form`).reset();\r\n                this.props.refreshList();\r\n            })\r\n            .catch(() => {\r\n                console.log(`Catch error!`);\r\n                alert(`An error occurred, please try again.`);\r\n                this.setState({ disabled: false });\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.currentEvent ? \"Update\" : \"Add\"}\r\n                <br />\r\n                <form\r\n                    onSubmit={(event) => this.submitHandler(event)}\r\n                    id=\"add-event-form\"\r\n                >\r\n                    Name: <br />\r\n                    <input\r\n                        type=\"text\"\r\n                        defaultValue={this.props.currentEvent?.name}\r\n                        name=\"eventName\"\r\n                        disabled={this.state.disabled}\r\n                    />\r\n                    <br />\r\n                    Location: <br />\r\n                    <input\r\n                        type=\"text\"\r\n                        defaultValue={this.props.currentEvent?.location}\r\n                        name=\"eventLocation\"\r\n                        disabled={this.state.disabled}\r\n                    />\r\n                    <br />\r\n                    Description: <br />\r\n                    <input\r\n                        type=\"text\"\r\n                        defaultValue={this.props.currentEvent?.description}\r\n                        name=\"eventDescription\"\r\n                        disabled={this.state.disabled}\r\n                    />\r\n                    <br />\r\n                    Date: <br />\r\n                    <input\r\n                        type=\"text\"\r\n                        defaultValue={this.props.currentEvent?.date}\r\n                        name=\"eventDate\"\r\n                        disabled={this.state.disabled}\r\n                    />\r\n                    <br />\r\n                    Time: <br />\r\n                    <input\r\n                        type=\"text\"\r\n                        defaultValue={this.props.currentEvent?.time}\r\n                        name=\"eventTime\"\r\n                        disabled={this.state.disabled}\r\n                    />\r\n                    <br />\r\n                    <button type=\"submit\" disabled={this.state.disabled}>\r\n                        Submit\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Add;\r\n","import React from \"react\";\r\nimport Add from \"../Add/Add\";\r\n\r\nclass Dashboard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            events: [],\r\n            currentEvent: undefined,\r\n        };\r\n    }\r\n\r\n    refreshList() {\r\n        this.props.apiClient.getEvent().then((response) =>\r\n            this.setState({\r\n                events: response.data,\r\n            })\r\n        );\r\n    }\r\n\r\n    removeEvent(id) {\r\n        this.props.apiClient.removeEvent(id).then(() => this.refreshList());\r\n    }\r\n\r\n    updateEvent(event) {\r\n        this.setState({\r\n            currentEvent: event,\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshList();\r\n    }\r\n\r\n    buildRows() {\r\n        return this.state.events.map((current) => {\r\n            return (\r\n                <tr key={current._id}>\r\n                    <td>{current.name}</td>\r\n                    <td>{current.location}</td>\r\n                    <td>{current.description}</td>\r\n                    <td>{current.date}</td>\r\n                    <td>{current.time}</td>\r\n                    <td>\r\n                        <button onClick={() => this.updateEvent(current)}>\r\n                            Update\r\n                        </button>\r\n                        <button onClick={() => this.removeEvent(current._id)}>\r\n                            Remove\r\n                        </button>\r\n                    </td>\r\n                </tr>\r\n            );\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Event Name</th>\r\n                            <th>Location</th>\r\n                            <th>Description</th>\r\n                            <th>Date</th>\r\n                            <th>Time</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>{this.buildRows()}</tbody>\r\n                </table>\r\n                <br />\r\n                <br />\r\n                <Add\r\n                    apiClient={this.props.apiClient}\r\n                    refreshList={() => {\r\n                        this.refreshList();\r\n                        this.setState({\r\n                            currentEvent: undefined,\r\n                        });\r\n                    }}\r\n                    currentEvent={this.state.currentEvent}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Dashboard;\r\n","import React from \"react\";\r\n\r\nclass Login extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            disabled: false,\r\n        };\r\n    }\r\n\r\n    submitHandler(event) {\r\n        event.preventDefault();\r\n        this.setState({ disabled: true });\r\n        this.props.apiClient\r\n            .login(event.target.username.value, event.target.password.value)\r\n            .then((response) => {\r\n                this.setState({ disabled: false });\r\n                this.props.loggedIn(response.data.token);\r\n            })\r\n            .catch(() => {\r\n                alert(`An error occurred, please try again`);\r\n                this.setState({ disabled: false });\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                Login\r\n                <br />\r\n                <form onSubmit={(event) => this.submitHandler(event)}>\r\n                    Username:\r\n                    <br />\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"username\"\r\n                        disabled={this.state.disabled}\r\n                    />\r\n                    <br />\r\n                    Password:\r\n                    <br />\r\n                    <input\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        disabled={this.state.disabled}\r\n                    />\r\n                    <br />\r\n                    <br />\r\n                    <button type=\"submit\" disabled={this.state.disabled}>\r\n                        Submit\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport { ApiClient } from \"./ApiClient/ApiClient\";\r\nimport Dashboard from \"./Dashboard/Dashboard\";\r\nimport Login from \"./Login/Login\";\r\n\r\nclass Eventful extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            token: window.localStorage.getItem(`token`),\r\n        };\r\n        this.apiClient = new ApiClient(\r\n            () => this.state.token,\r\n            () => this.logout()\r\n        );\r\n    }\r\n\r\n    login(token) {\r\n        window.localStorage.setItem(`token`, token);\r\n        this.setState({ token });\r\n    }\r\n\r\n    logout() {\r\n        window.localStorage.removeItem(`token`);\r\n        this.setState({ token: undefined });\r\n    }\r\n\r\n    render() {\r\n        if (this.state.token) {\r\n            return <Dashboard apiClient={this.apiClient} />;\r\n        }\r\n        return (\r\n            <Login\r\n                loggedIn={(token) => this.login(token)}\r\n                apiClient={this.apiClient}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default Eventful;\r\n","import React from \"react\";\nimport Eventful from \"./Eventful/Eventful\";\n\nconst App = () => {\n    return (\n        <div>\n            <Eventful />\n        </div>\n    );\n};\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import(\"web-vitals\").then(\n            ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n                getCLS(onPerfEntry);\n                getFID(onPerfEntry);\n                getFCP(onPerfEntry);\n                getLCP(onPerfEntry);\n                getTTFB(onPerfEntry);\n            }\n        );\n    }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}